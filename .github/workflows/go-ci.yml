name: Go CI

on:
  push:
    branches: [ main ]
    paths:
      - "go-version/**"
      - ".github/workflows/go-ci.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "go-version/**"
      - ".github/workflows/go-ci.yml"
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./go-version

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          check-latest: true
          cache: true

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Run tests
        run: go test -race -vet=off ./...

      - name: Build binary
        run: go build -v -o url-shortener-go

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: url-shortener-go
          path: go-version/url-shortener-go
          if-no-files-found: error

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./go-version

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Download binary
        uses: actions/download-artifact@v3
        with:
          name: url-shortener-go
          path: ./go-version

      - name: Make binary executable
        run: chmod +x ./url-shortener-go

      - name: Start server
        run: |
          ./url-shortener-go &
          echo "SERVER_PID=$!" >> $GITHUB_ENV
          # Give the server time to start
          sleep 2

      - name: Install k6
        run: |
          curl -L https://github.com/grafana/k6/releases/download/v0.46.0/k6-v0.46.0-linux-amd64.tar.gz | tar xz
          sudo mv k6-v0.46.0-linux-amd64/k6 /usr/local/bin/

      - name: Run basic load test
        run: k6 run --vus 1 --duration 3s loadtest.js

      - name: Stop server
        if: always()
        run: kill $SERVER_PID
